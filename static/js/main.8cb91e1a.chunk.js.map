{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","initialTodo","App","useState","setTitle","setUserId","titleError","setTitleError","userError","setUserError","setTodos","trimTitle","trim","action","method","onSubmit","event","preventDefault","idList","newTodo","Math","max","prevTodos","addNewTodo","type","placeholder","value","onChange","target","htmlFor","defaultValue","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,uBCrDEC,EAA4B,SAAC,GAKnC,IAAD,IAJJC,KACEF,EAGE,EAHFA,MACAF,EAEE,EAFFA,KAGF,OACE,mBACEK,UAAU,WACVC,KAAI,iBAAYJ,GAFlB,SAIGF,KCRMO,EAA4B,SAAC,GAOnC,IAAD,IANJC,KACET,EAKE,EALFA,GACAU,EAIE,EAJFA,MAIE,IAHFC,iBAGE,SAFFN,EAEE,EAFFA,KAGF,OACE,0BACE,UAASL,EACTM,UAAWM,IACT,WAAY,CAAE,sBAAuBD,IAHzC,UAME,oBAAIL,UAAU,kBAAd,SACGI,IAGFL,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCrBlBQ,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKT,UCJtBgB,EAAU,SAACC,GAKf,OAJkBC,EAAgBC,MAChC,SAACd,GAAD,OAAUA,EAAKL,KAAOiB,MAMpBG,ECfS,CACb,CACEpB,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXM,OAAQ,IDFgCF,KAC1C,SAACN,GAAD,mBAAC,eACIA,GADL,IAEEJ,KAAMW,EAAQP,EAAKQ,aAIVI,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAA4BD,mBAAS,GAArC,mBAAOL,EAAP,KAAeO,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,mBAASF,GAAnC,mBAAON,EAAP,KAAce,EAAd,KACMC,EAAYpB,EAAMqB,OA4CxB,OACE,sBAAKzB,UAAU,MAAf,UACE,+CAEA,uBACE0B,OAAO,aACPC,OAAO,OACPC,SAlBe,SAACC,GACpBA,EAAMC,iBAENV,GAAehB,GACfkB,GAAcX,GAEVa,GAAab,EAAS,GA3BT,WACjB,IAAMoB,EAASvB,EAAMC,KACnB,SAAAN,GAAI,OAAIA,EAAKT,MAKTsC,EAAgB,CACpBtC,GAHmBuC,KAAKC,IAAL,MAAAD,KAAI,YAAQF,IAAU,EAIzC3B,QACAC,WAAW,EACXM,SACAZ,KAAMW,EAAQC,IAGhBY,GAAS,SAACY,GAAD,4BAAoBA,GAApB,CAA+BH,OAExCf,EAAS,IACTC,EAAU,GAURkB,IAQA,UAKE,sBAAKpC,UAAU,QAAf,UACE,+CAEE,uBACEqC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOnC,EACPoC,SA3Da,SAACX,GACxBZ,EAASY,EAAMY,OAAOF,OACtBnB,GAAc,SA6DPD,GACI,sBAAMnB,UAAU,QAAhB,qCAIP,sBAAKA,UAAU,QAAf,UACE,wBAAO0C,QAAQ,OAAf,sBAEE,yBACE,UAAQ,aACRH,MAAO5B,EACPgC,aAAc,EACdC,UAAQ,EACRJ,SAvEa,SAACX,GACxBX,GAAWW,EAAMY,OAAOF,OACxBjB,GAAa,IAgEL,UAOE,wBAAQiB,MAAM,IAAIM,UAAQ,EAA1B,2BAECjC,EAAgBH,KAAI,SAAAV,GAAI,OACvB,wBAEEwC,MAAOxC,EAAKL,GAFd,SAIGK,EAAKJ,MAHDI,EAAKL,aAQjB2B,GACI,sBAAMrB,UAAU,QAAhB,qCAIP,wBAAQqC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU7B,MAAOA,QE/HvBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8cb91e1a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../type/user';\n\ninterface Props {\n  user: User,\n}\nexport const UserInfo: React.FC<Props> = ({\n  user: {\n    email,\n    name,\n  },\n}) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../type/todo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed = false,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../type/todo';\n\ninterface Props {\n  todos: Todo[],\n}\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './type/todo';\n\nconst getUser = (userId: number) => {\n  const foundUser = usersFromServer.find(\n    (user) => user.id === userId,\n  );\n\n  return foundUser;\n};\n\nconst initialTodo: Todo[] = todosFromServer.map(\n  (todo) => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }),\n);\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n  const [todos, setTodos] = useState(initialTodo);\n  const trimTitle = title.trim();\n\n  const handeTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const addNewTodo = () => {\n    const idList = todos.map(\n      todo => todo.id,\n    );\n\n    const maxIdPlusOne = Math.max(...idList) + 1;\n\n    const newTodo: Todo = {\n      id: maxIdPlusOne,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    setTodos((prevTodos) => ([...prevTodos, newTodo]));\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (trimTitle && userId > 0) {\n      addNewTodo();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handeTitleChange}\n            />\n          </label>\n\n          {titleError\n            && <span className=\"error\">Please enter a title</span>}\n\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              defaultValue={0}\n              required\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {userError\n            && <span className=\"error\">Please choose a user</span>}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}